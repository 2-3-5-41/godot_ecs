{
	// Place your godot_ecs workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Server Component": {
		"prefix": "serve_comp",
		"body": [
			"#[derive(Component, Debug, Clone, Copy)]",
			"pub struct ${1:Component}(Rid);",
			"",
			"impl ${1:Component} {",
			"\tpub fn new() -> Self {",
			"\t\tSelf(${2:Server}::singleton().${3:Create})",
			"\t}",
			"\tpub fn from_rid(rid: Rid) -> Self {",
			"\t\tSelf(rid)",
			"\t}",
			"\tpub fn free(&self) {",
			"\t\t${2:Server}::singleton().free_rid(self.0);",
			"\t}"
			"}"
		]
	},
	"Server Resource": {
		"prefix": "serve_res",
		"body": [
			"#[derive(Resource, Debug, Clone, Copy)]",
			"pub struct ${1:Resource}(Rid);",
			"",
			"impl ${1:Resource} {",
			"\tpub fn new() -> Self {",
			"\t\tSelf(${2:Server}::singleton().${3:Create})",
			"\t}",
			"\t}",
			"\tpub fn from_rid(rid: Rid) -> Self {",
			"\t\tSelf(rid)",
			"\t}",
			"\tpub fn free(&self) {",
			"\t\t${2:Server}::singleton().free_rid(self.0);",
			"\t}"
			"}"
		]
	}
}